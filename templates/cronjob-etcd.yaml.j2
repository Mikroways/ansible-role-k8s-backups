apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backup-etcd
  namespace: kube-system
spec:
  schedule: "{{ m7s_k8s_backups_schedule }}"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: backup-etcd
            image: quay.io/coreos/etcd:v{{ etcd_version }}
            env:
            - name: ETCDCTL_API
              value: "3"
            command: ["/bin/sh"]
            args: 
              - -c
              - sh /root/backup/do-backup.sh && sh /root/clean/do-clean.sh
            volumeMounts:
            - name: do-backup-volume
              mountPath: /root/backup
            - name: do-clean-volume
              mountPath: /root/clean
{% for directory in m7s_k8s_backups_directories_on_etcd %}
            - name: {{ directory.name }}
              mountPath: {{ directory.path }}              
              readOnly: true
{% endfor %}
            - name: backup-volume
              mountPath: {{ m7s_k8s_backups_destination }}         
          restartPolicy: OnFailure
          nodeSelector:
            kubernetes.io/hostname: '{{ hostvars[etcd].ansible_facts.hostname }}'
          tolerations:
          - effect: NoSchedule
            operator: Exists
          hostNetwork: true
          volumes:
          - name: backup-volume
            hostPath:
              path: /backup
              type: DirectoryOrCreate
          - name: do-backup-volume
            configMap:
              name: backup-config
              items:
              - key: sh-do-etcd-backup
                path: do-backup.sh
          - name: do-clean-volume
            configMap:
              name: backup-config
              items:
              - key: sh-do-clean
                path: do-clean.sh
{% for directory in m7s_k8s_backups_directories_on_etcd %}
          - name: {{ directory.name }}
            hostPath:
              path: {{ directory.path }}
              type: DirectoryOrCreate
{% endfor %}
