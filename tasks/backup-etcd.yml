# tasks file for k8s-backup

- name: get etcd version
  shell: |
    set -o pipefail
    /usr/local/bin/etcdctl --version | grep etcdctl | cut -d " " -f3
  register: etcdctl_version
  become: yes
  changed_when: etcdctl_version.rc != 0
  when: ansible_hostname in groups['etcd']

- name: get envs from {{ k8s_backups_etcd_env_path }}
  shell: |
    set -o pipefail
    grep {{ item }} "{{ k8s_backups_etcd_env_path }}" | cut -d "=" -f2
  register: etcd_env
  become: yes
  changed_when: (etcd_env.stdout | length) > 0
  with_items:
    - ETCD_TRUSTED_CA_FILE
    - ETCD_CERT_FILE
    - ETCD_KEY_FILE
  when: ansible_hostname in groups['etcd']

- set_fact:
    etcd_version: "{{ etcdctl_version.stdout }}"
  when: ansible_hostname in groups['etcd']

- set_fact:
    etcd_trusted_ca_file: "{{ item.stdout }}"
  loop: "{{ etcd_env.results }}"
  when:
    - ansible_hostname in groups['etcd'] 
    - item.item == "ETCD_TRUSTED_CA_FILE"

- set_fact:
    etcd_cert_file: "{{ item.stdout }}"
  loop: "{{ etcd_env.results }}"
  when:
    - ansible_hostname in groups['etcd'] 
    - item.item == "ETCD_CERT_FILE"

- set_fact:
    etcd_key_file: "{{ item.stdout }}"
  loop: "{{ etcd_env.results }}"
  when:
    - ansible_hostname in groups['etcd'] 
    - item.item == "ETCD_KEY_FILE"

- name: install cronjob for etcd backups
  k8s:
    state: present
    definition: "{{ lookup('template', role_path  + '/templates/cronjob-etcd.yaml.j2', template_vars=dict(etcd=ansible_hostname,etcd_version=etcd_version)) }}"
  become: yes
  when: ansible_hostname in groups['etcd']

- name: install cronjob for etcd keys backups
  k8s:
    state: present
    definition: "{{ lookup('template', role_path  + '/templates/cronjob-etcd-key.yaml.j2', template_vars=dict(etcd=ansible_hostname,etcd_version=etcd_version)) }}"
  become: yes
  when: ansible_hostname in groups['etcd']
